name: Release Build

on:
  release:
    types: [published, created]
  workflow_dispatch:
    inputs:
      tag_name:
        description: '发布的标签名称 (例如: v1.0.0)'
        required: true
        type: string

# 添加权限配置
permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      
      - name: Show Environment Info
        run: |
          java -version
          echo "Workspace directory:"
          dir
          echo "Gradle version:"
          ./gradlew --version
      
      - name: Build Windows Release
        run: |
          ./gradlew --no-daemon --info --stacktrace packageReleaseDistributionForCurrentOS
        env:
          GRADLE_OPTS: "-Xmx4g -XX:MaxMetaspaceSize=1g"
      
      - name: Find Build Artifacts
        run: |
          echo "Searching for build artifacts:"
          Get-ChildItem -Path composeApp\build\compose\binaries -Recurse -Filter "*.msi"
      
      - name: List Build Output
        run: |
          echo "Build output directory (desktop/app):"
          if (Test-Path composeApp\build\compose\binaries\desktop\app\msi) {
            Get-ChildItem composeApp\build\compose\binaries\desktop\app\msi
          } else {
            echo "Directory not found"
          }
          
          echo "Build output directory (main-release):"
          if (Test-Path composeApp\build\compose\binaries\main-release\msi) {
            Get-ChildItem composeApp\build\compose\binaries\main-release\msi
          } else {
            echo "Directory not found"
          }
      
      - name: Rename Windows Artifacts
        run: |
          $artifactsDir = "release-artifacts"
          New-Item -Path $artifactsDir -ItemType Directory -Force
          
          $files = Get-ChildItem -Path composeApp\build\compose\binaries -Recurse -Filter "*.msi"
          foreach ($file in $files) {
            $newName = "HugoGalleryUploader-Windows-" + $file.Name
            Copy-Item $file.FullName -Destination (Join-Path $artifactsDir $newName)
          }
          
          Get-ChildItem $artifactsDir
      
      - name: Upload Windows Artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name || github.event.inputs.tag_name }}
          files: |
            release-artifacts/HugoGalleryUploader-Windows-*.msi
  
  build-macos:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      
      - name: Show Environment Info
        run: |
          java -version
          echo "Workspace directory:"
          ls -la
          echo "Gradle version:"
          ./gradlew --version || true
      
      - name: Set Gradle Wrapper Permissions
        run: chmod +x ./gradlew
      
      - name: Build macOS Release
        run: ./gradlew packageReleaseDistributionForCurrentOS --no-daemon --info --stacktrace
      
      - name: Find Build Artifacts
        run: |
          echo "Searching for build artifacts:"
          find composeApp/build/compose/binaries -name "*.dmg" -type f
      
      - name: List Build Output
        run: |
          echo "Build output directory (desktop/app):"
          ls -la composeApp/build/compose/binaries/desktop/app/dmg/ || echo "Directory not found"
          echo "Build output directory (main-release):"
          ls -la composeApp/build/compose/binaries/main-release/dmg/ || echo "Directory not found"
      
      - name: Rename macOS Artifacts
        run: |
          mkdir -p release-artifacts
          for f in composeApp/build/compose/binaries/main-release/dmg/*.dmg; do
            filename=$(basename "$f")
            cp "$f" "release-artifacts/HugoGalleryUploader-macOS-${filename}"
          done
          ls -la release-artifacts
      
      - name: Upload macOS Artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name || github.event.inputs.tag_name }}
          files: release-artifacts/HugoGalleryUploader-macOS-*.dmg
  
  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      
      - name: Show Environment Info
        run: |
          java -version
          echo "Workspace directory:"
          ls -la
          echo "Gradle version:"
          ./gradlew --version || true
      
      - name: Set Gradle Wrapper Permissions
        run: chmod +x ./gradlew
      
      - name: Build Linux Release
        run: ./gradlew packageReleaseDistributionForCurrentOS --no-daemon --info --stacktrace
      
      - name: Find Build Artifacts
        run: |
          echo "Searching for build artifacts:"
          find composeApp/build/compose/binaries -name "*.deb" -type f
      
      - name: List Build Output
        run: |
          echo "Build output directory (desktop/app):"
          ls -la composeApp/build/compose/binaries/desktop/app/deb/ || echo "Directory not found"
          echo "Build output directory (main-release):"
          ls -la composeApp/build/compose/binaries/main-release/deb/ || echo "Directory not found"
      
      - name: Rename Linux Artifacts
        run: |
          mkdir -p release-artifacts
          for f in composeApp/build/compose/binaries/main-release/deb/*.deb; do
            filename=$(basename "$f")
            cp "$f" "release-artifacts/HugoGalleryUploader-Linux-${filename}"
          done
          ls -la release-artifacts
      
      - name: Upload Linux Artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name || github.event.inputs.tag_name }}
          files: release-artifacts/HugoGalleryUploader-Linux-*.deb 